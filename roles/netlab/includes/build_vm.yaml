---
- name: create image container on remote server
  file:
    path: "{{ netlab_virt_images_path }}/{{ node.ansible_network_os }}"
    state: directory

- name: create config iso images for Cisco routers
  shell: "mkisofs -l -o {{ netlab_files_path }}/{{ node.ansible_network_os }}/{{ node.vm_config }} {{ netlab_files_path }}/configs/{{ node.hostname }}"
  when: "node.ansible_network_os  == 'ios'"

- name: copy base image vm_disk to image container
  copy:
    src: "{{ netlab_files_path }}/{{ node.ansible_network_os }}/{{ node.vm_disk }}"
    dest: "{{ netlab_virt_images_path }}/{{ node.ansible_network_os }}/{{ node.vm_disk }}"

- name: copy config image vm_config to image container
  copy:
    src: "{{ netlab_files_path }}/{{ node.ansible_network_os }}/{{ node.vm_config }}"
    dest: "{{ netlab_virt_images_path }}/{{ node.ansible_network_os }}/{{ node.vm_config }}"
  when: "'vm_config' in node"

- name: copy iso image to host
  copy:
    src: "{{ netlab_files_path }}/{{ node.ansible_network_os }}/{{ node.cdrom }}"
    dest: "{{ netlab_virt_iso_path }}/{{ node.cdrom }}"
  when: "'cdrom' in node"

- name: create virtual machine base folder
  file:
    path: "{{ netlab_virt_vm_path }}/{{ vm_name }}"
    state: directory

- name: copy base image to virtual machine folder
  copy:
    src: "{{ netlab_virt_images_path }}/{{ node.ansible_network_os }}/{{ node.vm_disk }}"
    dest: "{{ netlab_virt_vm_path }}/{{ vm_name }}/{{ node.vm_disk }}"
    remote_src: yes

- name: copy config image to virtual machine folder
  copy:
    src: "{{ netlab_virt_images_path }}/{{ node.ansible_network_os }}/{{ node.vm_config }}"
    dest: "{{ netlab_virt_vm_path }}/{{ vm_name }}/{{ node.vm_config }}"
    remote_src: yes
  when: "'vm_config' in node"

- name: create tmp folders
  file:
    path: "/tmp/{{ vm_name }}"
    state: directory
  when: "node.ansible_network_os  == 'eos'"

- name: upload config files for Arista routers
  shell: "guestmount -a {{ netlab_virt_vm_path }}/{{ vm_name }}/{{ node.vm_disk }} -m /dev/sda2 /tmp/{{ vm_name }} && cp -f {{ netlab_files_path }}/configs/{{ node.hostname }}/startup-config /tmp/{{ vm_name }} && guestunmount /tmp/{{ vm_name }}"
  when: "node.ansible_network_os  == 'eos'"

- name: create virtual machine
  virt:
    name: "{{ vm_name }}"
    command: define
    xml: "{{ lookup('template', 'templates/{{ node.ansible_network_os }}/vm.xml.j2') }}"
  when: vm_name not in running_vms.list_vms

- name: start all virtual machines
  virt:
    command: start
    name: "{{ vm_name }}"
  when: vm_name not in running_vms.list_vms
